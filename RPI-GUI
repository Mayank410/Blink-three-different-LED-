from tkinter import *
import tkinter.font
from gpiozero import LED as RED_LED
from gpiozero import LED as GREEN_LED
from gpiozero import LED as YELLOW_LED
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BOARD)

# the LED() function of the gpiozero library takes the actually GPIO pin we are using unlike when we are using the setup() from RPi.GPIO which need the location of the GPIO pin
# meaning to use the GPIO pin 14 using the LED() function of the gpiozero library we need to the place the wire in physical pin number 8 but in the program we will pass 14[the exact GPIO pin we are using] as argument in the LED(14) FUNCTION
# however to use the GPIO pin 14 using the setup() from RPi.GPIO we need to the place the wire in physical pin number 8 and in the program we will pass 8[just sepecifing that it is a GPIO pin, we don't need to tell which one] as argument in the setup(8,...) Function

red = RED_LED(17)  
green = GREEN_LED(27)
yellow = YELLOW_LED(22)

win = Tk() #creating a window.
win.title("LED Toggler") #creating  the title of the window.
winFont = tkinter.font.Font(family = 'Helevetica', size = 14, weight = "bold") #define the font colour, size and weight(bold/underline) of the characters of the buttons.

def redTrigger(): #function to switch the red led on/off.
    if red.is_lit: # is_lit checks whether the led is ON or OFF. if it is on then it will be switched OFF when the application is triggered.
        red.off()
        R_Button["text"] = "Switch LED on"
    else: #if the red led is not ON, then it will be switched ON
        red.on()
        green.off()
        yellow.off()
        R_Button["text"] = "Switch LED oFF"

def greenTrigger(): #function to switch the green led on/off.
    if green.is_lit:
        green.off()
        G_Button()["text"] = "Switch LED on"
    else:
        green.on()
        red.off()
        yellow.off()
        G_Button()["text"] = "Switch LED off"

def yellowTrigger(): #function to switch the yellow led on/off.
    if yellow.is_lit:
        yellow.off()
        Y_Button()["text"] = "Switch LED on"
    else:
        yellow.on()
        red.off()
        green.off()
        Y_Button()["text"] = "Switch LED off"

def closeTrigger(): #function to close the GUI program.
    GPIO.cleanup()
    win.destroy()
    red.off()
    green.off()
    yellow.off()

R_Button = Radiobutton(win, text = 'Switch LED On', font = winFont, command = redTrigger,bg = 'red', height = 2, width = 16)
R_Button.grid(row = 0, column = 1)

G_Button = Radiobutton(win, text = 'Switch LED On', font = winFont, command = greenTrigger,bg = 'green', height = 2, width = 16)
G_Button.grid(row = 1, column = 1)

Y_Button = Radiobutton(win, text = 'Switch LED On', font = winFont, command = yellowTrigger,bg = 'yellow', height = 2, width = 16)
Y_Button.grid(row = 2, column = 1)

exit_Button = Radiobutton(win, text = 'Exit', font = winFont, command = closeTrigger,bg = 'bisque2', height = 2, width = 16)
exit_Button.grid(row = 3, column = 1)

win.protocol("WM_DELETE_WINDOW",closeTrigger) #switch off all the leds if the GUI is closed.

win.mainloop() #the GUI keeps on running until the Exit or closs is clicked.
